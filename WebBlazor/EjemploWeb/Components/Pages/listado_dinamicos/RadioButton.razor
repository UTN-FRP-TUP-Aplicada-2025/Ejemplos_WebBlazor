@page "/radiobutton-dinamico"

<h3>RadioButton</h3>

@rendermode InteractiveServer
@attribute [StreamRendering]


<div>
    <EditForm Model="@_EjemploModelView" OnValidSubmit="onEnviar" FormName="etapa1">

        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <h5>Seleccion el costo a abonar</h5>

            <InputRadioGroup class="mb-3" @bind-Value="_EjemploModelView.IdTipo" @bind-Value:after="OnTipoChanged">
                @foreach (var opcion in _TiposModelView)
                {
                    <div class="form-check">
                        <InputRadio Id="@($"radio-{opcion.Id}")" class="form-check-input" Value=@opcion.Id />

                        <label class="form-check-label" for="@($"radio-{opcion.Id}")">
                            <div class="d-flex flex-column">
                                <span>@opcion.Descripcion</span>
                                <span class="text-muted" style="text-align: left;">@opcion.Costo?.ToString("C2")</span>
                            </div>
                        </label>
                    </div>
                }
            </InputRadioGroup>

        </div>

        <button type="submit">Enviar</button>

    </EditForm>


    <div>@Seleccion</div>
</div>

@code {
    EjemploModelView _EjemploModelView = new EjemploModelView();
    string Seleccion;

    List<TipoModelView> _TiposModelView = new List<TipoModelView>();

    private bool _datosInicializados = false;

    protected override async Task OnInitializedAsync()
    {
        if (!_datosInicializados)
        {

            _datosInicializados = true;

            _TiposModelView = new List<TipoModelView>
            {
                   new TipoModelView
                   {
                        Id=1, Descripcion="Opción 1", Costo=100.0
                   } ,
                   new TipoModelView
                   {
                        Id=2, Descripcion="Opción 2", Costo=100.0
                   }
            };
            StateHasChanged();
        }
    }

    async protected override Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            
        }
    }

    public void onEnviar()
    {
        Seleccion = _EjemploModelView.TipoDescripcion;
    }

    void OnTipoChanged()
    {
        var itemSeleccionado = _TiposModelView.FirstOrDefault(r => r.Id == _EjemploModelView.IdTipo);
        _EjemploModelView.TipoDescripcion = itemSeleccionado?.Descripcion ?? "";
    }

    class EjemploModelView
    {
        public int IdTipo { get; set; }
        public string? TipoDescripcion { get; set; }
    }

    class TipoModelView
    {
        public int Id { get; set; }
        public string? Descripcion { get; set; }
        public double? Costo { get; set; }
    }
}
