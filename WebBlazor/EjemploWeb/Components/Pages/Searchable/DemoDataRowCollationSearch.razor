@page "/demo-datarow-collation-search"
@using System.Data
@using System.Globalization

@attribute [StreamRendering]
@rendermode InteractiveServer

<section class="content file_manager">
    <div class="container-fluid">

        <div class="block-header">
            <div class="row clearfix">
                <div class="col-lg-5 col-md-5 col-sm-12">
                    <h2>Documentos</h2>
                </div>
            </div>
        </div>

        <div class="row clearfix">

            <div class="col-md-8 col-12">

                <div class="card">

                    @foreach (DataRow item in dtPersonasResult.Rows)
                    {
                        <div class="body">
                            <div class="row">
                                <div>@item["Nombre"]</div>
                            </div>
                        </div>
                    }

                </div>
            </div>

            <div class="col-md-4 col-12">
                <div class="row">

                    <div class="col-lg-12 col-md-12 col-sm-12">
                        <div class="input-group m-b-0">
                            <InputText type="text" class="form-control" @bind-Value="searchText" @oninput="OnSearchInput" placeholder="Search..." />
                            <span class="input-group-addon"> <i class="zmdi zmdi-search"></i></span>
                        </div>
                    </div>

                    <div class="card">
                        @foreach (DataRow item in dtPersonasResult.Rows)
                        {
                            <div class="body mb-3">
                                <div>@item["Nombre"]</div>
                            </div>
                        }
                    </div>
                </div>
            </div>
        </div>

    </div>
</section>

@code
{
    string searchText;

    DataTable dtPersonas = new();
    DataTable dtPersonasResult = new();

    public void Inicializacion()
    {
        dtPersonas = new();

        DataColumn dcDNI = new DataColumn("Dni", typeof(int));
        dtPersonas.Columns.Add(dcDNI);
        DataColumn dcNombre = new DataColumn("Nombre", typeof(string));
        dtPersonas.Columns.Add(dcNombre);

        #region
        DataRow r = dtPersonas.NewRow();
        r["Dni"] = 23432432;
        r["Nombre"] = "Juan";
        dtPersonas.Rows.Add(r);

        r = dtPersonas.NewRow();
        r["Dni"] = 33432432;
        r["Nombre"] = "Maria";
        dtPersonas.Rows.Add(r);

        r = dtPersonas.NewRow();
        r["Dni"] = 37832432;
        r["Nombre"] = "Rosa";
        dtPersonas.Rows.Add(r);

        r = dtPersonas.NewRow();
        r["Dni"] = 36832432;
        r["Nombre"] = "Juan Alberto";
        dtPersonas.Rows.Add(r);

        r = dtPersonas.NewRow();
        r["Dni"] = 35832432;
        r["Nombre"] = "José María";
        dtPersonas.Rows.Add(r);

        r = dtPersonas.NewRow();
        r["Dni"] = 31832432;
        r["Nombre"] = "Ana Maria";
        dtPersonas.Rows.Add(r);
        #endregion
    }

    protected override Task OnInitializedAsync()
    {
        Inicializacion();
        dtPersonasResult = dtPersonas.Copy();
        return base.OnInitializedAsync();
    }

    async Task OnSearchInput(ChangeEventArgs e)
    {
        string expresion = e.Value?.ToString() ?? "";
        dtPersonasResult = dtPersonas.Clone();

        if (string.IsNullOrWhiteSpace(expresion))
        {
            foreach (DataRow dataRow in dtPersonas.Rows)
            {
                dtPersonasResult.ImportRow(dataRow);
            }
        }
        else
        {
            CompareInfo compareInfo = CultureInfo.InvariantCulture.CompareInfo;
            CompareOptions options = CompareOptions.IgnoreCase | CompareOptions.IgnoreNonSpace | CompareOptions.IgnoreSymbols;

            var filteredRows = dtPersonas.AsEnumerable()
                                    .Where(row => compareInfo.IndexOf(row["Nombre"].ToString() ?? "", expresion, options) >= 0)
                                    .OrderByDescending(row => row["Dni"])
                                    .ThenBy(row => row["Nombre"]);

            foreach (DataRow dataRow in filteredRows)
            {
                dtPersonasResult.ImportRow(dataRow);
            }
        }

        StateHasChanged();
        await Task.CompletedTask;
    }
}